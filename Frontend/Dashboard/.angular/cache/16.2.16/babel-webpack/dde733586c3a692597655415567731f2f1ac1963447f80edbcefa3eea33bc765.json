{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/medfa/Desktop/Cycle_ingenieur/Esprit/4SAE5/Projet_PI/Pidev-ConstructionIQ/FrontEnd/Dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/auth-service.service\";\nimport * as i2 from \"@angular/router\";\nexport class AdminGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const authenticated = yield _this.authService.init();\n      if (!authenticated || !_this.authService.isAdmin()) {\n        // Redirect to front office if not admin\n        window.location.href = 'http://localhost:4200';\n        return false;\n      }\n      return true;\n    })();\n  }\n  static {\n    this.ɵfac = function AdminGuard_Factory(t) {\n      return new (t || AdminGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdminGuard,\n      factory: AdminGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AdminGuard","constructor","authService","router","canActivate","_this","_asyncToGenerator","authenticated","init","isAdmin","window","location","href","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\medfa\\Desktop\\Cycle_ingenieur\\Esprit\\4SAE5\\Projet_PI\\Pidev-ConstructionIQ\\FrontEnd\\Dashboard\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {CanActivate, Router} from \"@angular/router\";\nimport {AuthService} from \"../Services/auth-service.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate(): Promise<boolean> {\n    const authenticated = await this.authService.init();\n\n    if (!authenticated || !this.authService.isAdmin()) {\n      // Redirect to front office if not admin\n      window.location.href = 'http://localhost:4200';\n      return false;\n    }\n    return true;\n  }\n}\n"],"mappings":";;;;AAOA,OAAM,MAAOA,UAAU;EACrBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEjEC,WAAWA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACf,MAAMC,aAAa,SAASF,KAAI,CAACH,WAAW,CAACM,IAAI,EAAE;MAEnD,IAAI,CAACD,aAAa,IAAI,CAACF,KAAI,CAACH,WAAW,CAACO,OAAO,EAAE,EAAE;QACjD;QACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,uBAAuB;QAC9C,OAAO,KAAK;;MAEd,OAAO,IAAI;IAAC;EACd;;;uBAZWZ,UAAU,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAVlB,UAAU;MAAAmB,OAAA,EAAVnB,UAAU,CAAAoB,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}