{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/medfa/Desktop/Cycle_ingenieur/Esprit/4SAE5/Projet_PI/Pidev-ConstructionIQ/FrontEnd/Dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Keycloak from \"keycloak-js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class KeycloakService {\n  constructor(router) {\n    this.router = router;\n  }\n  get keycloak() {\n    if (!this._keycloak) {\n      this._keycloak = new Keycloak({\n        url: 'http://localhost:9090',\n        realm: 'Esprit-project',\n        clientId: 'Pidev-ConstructionIQ'\n      });\n    }\n    return this._keycloak;\n  }\n  get profile() {\n    return this._profile;\n  }\n  init() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        console.log('Authenticating the user...');\n        const authenticated = yield _this.keycloak.init({\n          onLoad: 'login-required',\n          pkceMethod: 'S256',\n          checkLoginIframe: false\n        });\n        if (authenticated) {\n          _this._profile = yield _this.keycloak.loadUserProfile();\n          _this._profile.token = _this.keycloak.token;\n          return true;\n        } else {\n          _this.keycloak.login();\n          return false;\n        }\n      } catch (error) {\n        console.error('Keycloak initialization failed:', error);\n        _this.router.navigate(['/login']);\n        return false;\n      }\n    })();\n  }\n  //Log in and log out\n  login() {\n    return this.keycloak?.login();\n  }\n  logout() {\n    return this.keycloak?.logout({\n      redirectUri: window.location.origin\n    });\n  }\n  //Filtrage par role\n  isAdmin() {\n    return this._keycloak?.hasRealmRole('admin') || false;\n  }\n  isUser() {\n    return this._keycloak?.hasRealmRole('user') || false;\n  }\n  getToken() {\n    return this._keycloak?.token || '';\n  }\n  // @ts-ignore\n  getUserRoles() {\n    return _asyncToGenerator(function* () {})();\n  } // implementation\n\n  static {\n    this.ɵfac = function KeycloakService_Factory(t) {\n      return new (t || KeycloakService)(i0.ɵɵinject(i1.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: KeycloakService,\n      factory: KeycloakService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Keycloak","KeycloakService","constructor","router","keycloak","_keycloak","url","realm","clientId","profile","_profile","init","_this","_asyncToGenerator","console","log","authenticated","onLoad","pkceMethod","checkLoginIframe","loadUserProfile","token","login","error","navigate","logout","redirectUri","window","location","origin","isAdmin","hasRealmRole","isUser","getToken","getUserRoles","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\medfa\\Desktop\\Cycle_ingenieur\\Esprit\\4SAE5\\Projet_PI\\Pidev-ConstructionIQ\\FrontEnd\\Dashboard\\src\\app\\Services\\keycloak\\keycloak.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport Keycloak from \"keycloak-js\";\nimport {UserProfile} from \"./user-profile\";\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KeycloakService {\n  private _keycloak: Keycloak | undefined;\n  private _profile: UserProfile | undefined;\n\n  constructor(private router: Router) {}\n\n  get keycloak() {\n    if(!this._keycloak){\n      this._keycloak = new Keycloak({\n        url:'http://localhost:9090',\n        realm:'Esprit-project',\n        clientId:'Pidev-ConstructionIQ'\n      });\n    }\n    return this._keycloak;\n  }\n\n  get profile(): UserProfile | undefined {\n    return this._profile;\n  }\n\n  async init(): Promise<boolean> {\n    try {\n      console.log('Authenticating the user...');\n      const authenticated = await this.keycloak.init({\n        onLoad: 'login-required',\n        pkceMethod: 'S256',\n        checkLoginIframe: false\n      });\n\n      if (authenticated) {\n        this._profile = (await this.keycloak.loadUserProfile()) as UserProfile;\n        this._profile.token = this.keycloak.token;\n        return true;\n      } else {\n        this.keycloak.login();\n        return false;\n      }\n    } catch (error) {\n      console.error('Keycloak initialization failed:', error);\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n\n  //Log in and log out\n\n  login() {\n    return this.keycloak?.login();\n  }\n\n  logout() {\n    return this.keycloak?.logout({\n      redirectUri: window.location.origin\n    });\n  }\n\n  //Filtrage par role\n\n  isAdmin(): boolean {\n    return this._keycloak?.hasRealmRole('admin') || false;\n  }\n\n  isUser(): boolean {\n    return this._keycloak?.hasRealmRole('user') || false;\n  }\n\n  getToken(): string {\n    return this._keycloak?.token || '';\n  }\n\n  // @ts-ignore\n  async getUserRoles(): Promise<string[]> {\n    // implementation\n  }\n}\n"],"mappings":";AACA,OAAOA,QAAQ,MAAM,aAAa;;;AAOlC,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErC,IAAIC,QAAQA,CAAA;IACV,IAAG,CAAC,IAAI,CAACC,SAAS,EAAC;MACjB,IAAI,CAACA,SAAS,GAAG,IAAIL,QAAQ,CAAC;QAC5BM,GAAG,EAAC,uBAAuB;QAC3BC,KAAK,EAAC,gBAAgB;QACtBC,QAAQ,EAAC;OACV,CAAC;;IAEJ,OAAO,IAAI,CAACH,SAAS;EACvB;EAEA,IAAII,OAAOA,CAAA;IACT,OAAO,IAAI,CAACC,QAAQ;EACtB;EAEMC,IAAIA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACR,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QACzC,MAAMC,aAAa,SAASJ,KAAI,CAACR,QAAQ,CAACO,IAAI,CAAC;UAC7CM,MAAM,EAAE,gBAAgB;UACxBC,UAAU,EAAE,MAAM;UAClBC,gBAAgB,EAAE;SACnB,CAAC;QAEF,IAAIH,aAAa,EAAE;UACjBJ,KAAI,CAACF,QAAQ,SAAUE,KAAI,CAACR,QAAQ,CAACgB,eAAe,EAAkB;UACtER,KAAI,CAACF,QAAQ,CAACW,KAAK,GAAGT,KAAI,CAACR,QAAQ,CAACiB,KAAK;UACzC,OAAO,IAAI;SACZ,MAAM;UACLT,KAAI,CAACR,QAAQ,CAACkB,KAAK,EAAE;UACrB,OAAO,KAAK;;OAEf,CAAC,OAAOC,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvDX,KAAI,CAACT,MAAM,CAACqB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,KAAK;;IACb;EACH;EAEA;EAEAF,KAAKA,CAAA;IACH,OAAO,IAAI,CAAClB,QAAQ,EAAEkB,KAAK,EAAE;EAC/B;EAEAG,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACrB,QAAQ,EAAEqB,MAAM,CAAC;MAC3BC,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACC;KAC9B,CAAC;EACJ;EAEA;EAEAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACzB,SAAS,EAAE0B,YAAY,CAAC,OAAO,CAAC,IAAI,KAAK;EACvD;EAEAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAAC3B,SAAS,EAAE0B,YAAY,CAAC,MAAM,CAAC,IAAI,KAAK;EACtD;EAEAE,QAAQA,CAAA;IACN,OAAO,IAAI,CAAC5B,SAAS,EAAEgB,KAAK,IAAI,EAAE;EACpC;EAEA;EACMa,YAAYA,CAAA;IAAA,OAAArB,iBAAA;EAElB,CAAC,CADC;;;;uBAzESZ,eAAe,EAAAkC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAfrC,eAAe;MAAAsC,OAAA,EAAftC,eAAe,CAAAuC,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}